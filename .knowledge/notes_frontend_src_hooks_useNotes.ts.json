{"is_source_file": true, "format": "TypeScript", "description": "Custom React hook 'useNotes' for managing notes state and CRUD operations, including optimistic UI updates, in a front-end notes management application.", "external_files": ["@/types/note", "@/services/api"], "external_methods": ["listNotes", "createNote", "deleteNote", "updateNote"], "published": ["useNotes"], "classes": [], "methods": [{"name": "export function useNotes(): UseNotesResult { useNotes", "description": "Main hook function that provides notes state management, fetching, adding, removing, and saving notes with optimistic updates.", "scope": "", "scopeKind": ""}], "calls": ["useCallback", "useEffect", "useMemo", "useState", "listNotes", "createNote", "deleteNote", "updateNote"], "search-terms": ["useNotes", "notes state management", "CRUD notes", "optimistic updates", "React hook", "TypeScript notes", "note management"], "state": 2, "file_id": 19, "knowledge_revision": 61, "git_revision": "", "revision_history": [{"39": ""}, {"59": ""}, {"60": ""}, {"61": ""}], "ctags": [{"_type": "tag", "name": "Error", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^        const message = e instanceof Error ? e.message : \"Failed to create note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Error", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^      const message = e instanceof Error ? e.message : \"Failed to delete note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Status", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^type Status = \"idle\" | \"loading\" | \"success\" | \"error\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "UseNotesResult", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^export interface UseNotesResult {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "add", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  add: (input: { title: string; content?: string; tags?: string[]; pinned?: boolean }) => Promis/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "add", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const add = useCallback($/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "e", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^        const message = e instanceof Error ? e.message : \"Failed to create note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "e", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^      const message = e instanceof Error ? e.message : \"Failed to delete note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const [error, setError] = useState<string | undefined>(undefined);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  error?: string;$/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "instanceof", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^        const message = e instanceof Error ? e.message : \"Failed to create note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "instanceof", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^      const message = e instanceof Error ? e.message : \"Failed to delete note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^        const message = e instanceof Error ? e.message : \"Failed to create note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^      const message = e instanceof Error ? e.message : \"Failed to delete note\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const [notes, setNotes] = useState<Note[]>([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  notes: Note[];$/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "reload", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const reload = useCallback(async () => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "reload", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  reload: () => Promise<void>;$/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const remove = useCallback(async (id: string) => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  remove: (id: string) => Promise<void>;$/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const save = useCallback($/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  save: (id: string, changes: Partial<Pick<Note, \"title\" | \"content\" | \"tags\" | \"pinned\">>) => P/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "setError", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const [error, setError] = useState<string | undefined>(undefined);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setNotes", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const [notes, setNotes] = useState<Note[]>([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setStatus", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const [status, setStatus] = useState<Status>(\"idle\");$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "sortNotes", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const sortNotes = useCallback((list: Note[]) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  const [status, setStatus] = useState<Status>(\"idle\");$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^  status: Status;$/", "language": "TypeScript", "kind": "property", "scope": "UseNotesResult", "scopeKind": "interface"}, {"_type": "tag", "name": "useNotes", "path": "/home/kavia/workspace/code-generation/note-management-system-59232-59090/notes_frontend/src/hooks/useNotes.ts", "pattern": "/^export function useNotes(): UseNotesResult {$/", "language": "TypeScript", "kind": "function"}], "hash": "584edcbfb125554ba3d9d0a3b244149b", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/hooks/useNotes.ts", "fields": [{"name": "export interface UseNotesResult {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "add: (input: { title: string; content?: string; tags?: string[]; pinned?: boolean }) => Promis/", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "error?: string;", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "notes: Note[];", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "reload: () => Promise<void>;", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "remove: (id: string) => Promise<void>;", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "save: (id: string, changes: Partial<Pick<Note, \"title\" | \"content\" | \"tags\" | \"pinned\">>) => P/", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "status: Status;", "scope": "UseNotesResult", "scopeKind": "interface", "description": "unavailable"}]}